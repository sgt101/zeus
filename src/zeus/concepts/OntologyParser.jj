options {
  STATIC = false;
}

PARSER_BEGIN(OntologyParser)

package zeus.concepts;

import java.util.*;
import java.io.*;
import zeus.util.*;

public class OntologyParser {
}

PARSER_END(OntologyParser)

/* WHITE SPACE */

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
| "\f"
}

/* COMMENTS */

MORE :
{
  "//" : IN_SINGLE_LINE_COMMENT
|
  <"/**" ~["/"]> { input_stream.backup(1); } : IN_FORMAL_COMMENT
|
  "/*" : IN_MULTI_LINE_COMMENT
}

<IN_SINGLE_LINE_COMMENT>
SPECIAL_TOKEN :
{
  <SINGLE_LINE_COMMENT: "\n" | "\r" | "\r\n" > : DEFAULT
}

<IN_FORMAL_COMMENT>
SPECIAL_TOKEN :
{
  <FORMAL_COMMENT: "*/" > : DEFAULT
}

<IN_MULTI_LINE_COMMENT>
SPECIAL_TOKEN :
{
  <MULTI_LINE_COMMENT: "*/" > : DEFAULT
}

<IN_SINGLE_LINE_COMMENT,IN_FORMAL_COMMENT,IN_MULTI_LINE_COMMENT>
MORE :
{
  < ~[] >
}

/* RESERVED WORDS AND LITERALS */

TOKEN : {
  < BEGIN_ONTOLOGY:		"BEGIN_ONTOLOGY" >
| < BEGIN_PREAMBLE:		"BEGIN_PREAMBLE" >
| < BEGIN_RESTRICTIONS:		"BEGIN_RESTRICTIONS" >
| < BEGIN_RESTRICTION_ITEM:	"BEGIN_RESTRICTION_ITEM" >
| < BEGIN_FACTS:			"BEGIN_FACTS" >
| < BEGIN_FACT_ITEM:		"BEGIN_FACT_ITEM" >
| < BEGIN_ATTRIBUTE_LIST:	"BEGIN_ATTRIBUTE_LIST" >
| < BEGIN_ATTRIBUTE_ITEM:	"BEGIN_ATTRIBUTE_ITEM" >

| < END_PREAMBLE:		"END_PREAMBLE" >
| < END_RESTRICTION_ITEM:	"END_RESTRICTION_ITEM" >
| < END_RESTRICTIONS:		"END_RESTRICTIONS" >
| < END_ATTRIBUTE_ITEM:		"END_ATTRIBUTE_ITEM" >
| < END_ATTRIBUTE_LIST:		"END_ATTRIBUTE_LIST" >
| < END_FACT_ITEM:		"END_FACT_ITEM" >
| < END_FACTS:			"END_FACTS" >
| < END_ONTOLOGY:		"END_ONTOLOGY" >

| < SYSTEM_NAME:	        "ZEUS-Ontology-Editor" >

| < SYSTEM:			":system" >
| < VERSION:			":version" >
| < NAME:			":name" >
| < PARENT:			":parent" >
| < TYPE:			":type" >
| < VALUE:			":value" >
| < RESTRICTION:		":restriction" >
| < DEFAULT_TAG:		":default" >

}

/* LITERALS */

TOKEN: {
  < ID:      <LETTER> (<LETTER>|<DIGIT>|"$")* >
| < INTEGER: <DECIMAL> (["l","L"])? >
| < REAL:
        (["0"-"9"])+ "." (["0"-"9"])* (<EXPONENT>)? (["f","F","d","D"])?
      | "." (["0"-"9"])+ (<EXPONENT>)? (["f","F","d","D"])?
      | (["0"-"9"])+ <EXPONENT> (["f","F","d","D"])?
      | (["0"-"9"])+ (<EXPONENT>)? ["f","F","d","D"]
  >
| < LITERAL:
      "\""
      (   (~["\"","\\","\n","\r"])
        | ("\\"
            ( ["n","t","b","r","f","\\","'","\""]
            | ["0"-"7"] ( ["0"-"7"] )?
            | ["0"-"3"] ["0"-"7"] ["0"-"7"]
            )
          )
      )*
      "\""
  >
| < #EXPONENT: ["e","E"] (["+","-"])? (["0"-"9"])+ >
| < #LETTER: ["a"-"z", "_", "A"-"Z"] >
| < #DIGIT: ["0"-"9"] >
| < #DECIMAL: "0" | ["1"-"9"] (["0"-"9"])* >

}

void parse(OntologyDb model):
{
   Token version, system, count, name = null, type = null, value = null;
   Token parent, fact, restriction, default_token;
}
{
<BEGIN_ONTOLOGY>
     <BEGIN_PREAMBLE>
        <SYSTEM>  system  = <SYSTEM_NAME>
        <VERSION> version = <LITERAL>
     <END_PREAMBLE>
     {
        String ver = Misc.literalToString(version.image);
        if ( !ver.equals(SystemProps.getProperty("version.id")) )
           model.__setWarning("File and system versions are different");
     }
     [
        <BEGIN_RESTRICTIONS>
        (
           <BEGIN_RESTRICTION_ITEM>
              <NAME>  name = <ID>
              <TYPE>  type = <ID>
              <VALUE> value = <LITERAL>
           <END_RESTRICTION_ITEM>
           {
              String s = Misc.literalToString(value.image);
              model.__addRestriction(name.image,type.image,s);
           }
        )*
        <END_RESTRICTIONS>
     ]

     [
        <BEGIN_FACTS>
        (
           <BEGIN_FACT_ITEM>
              <NAME>   fact   = <ID>
              <PARENT> parent = <ID>
              {
                 model.__addChildFact(parent.image,fact.image);
              }
              [
                 <BEGIN_ATTRIBUTE_LIST>
                 (
                    <BEGIN_ATTRIBUTE_ITEM>
                       <NAME>        name          = <ID>
                       <TYPE>        type          = <ID>
                       <RESTRICTION> restriction   = <LITERAL>
                       <DEFAULT_TAG> default_token = <LITERAL>
                    <END_ATTRIBUTE_ITEM>
                    {
                       String s1, s2;
                       s1 = Misc.literalToString(restriction.image);
                       s2 = Misc.literalToString(default_token.image);
                       model.__addNewAttributeRow(fact.image,name.image,
                                                  type.image,s1,s2);
                    }
                 )*
                 <END_ATTRIBUTE_LIST>
              ]
           <END_FACT_ITEM>
        )*
        <END_FACTS>
     ]
  <END_ONTOLOGY>
}
