/*
	This software was produced as a part of research
	activities. It is not intended to be used as commercial
	or industrial software by any organisation. Except as
	explicitly stated, no guarantees are given as to its
	reliability or trustworthiness if used for purposes other
	than those for which it was originally intended.
 
	(c) British Telecommunications plc 1999.
*/

/*
This stub file was automatically generated by ZeusAgentGenerator version 1.2.2
*/

import java.util.*;
import zeus.util.*;
import zeus.concepts.*;
import zeus.actors.TaskContext;
import zeus.actors.ZeusTask;

public class MakeComputer extends ZeusTask {
/** getDescription was automatically generated by the Zeus Agent Generator tool
*it provides a Service description for the task written in DAML-S (0.6) which
*can be used by other agents that speak DAML to understand what the task does
**/
public String getDescription() {

	 String serviceDescription = new String(); 

	serviceDescription += "<?xml version='1.0' encoding='ISO-8859-1'?> \n <!DOCTYPE uridef[ \n  <!ENTITY rdf \"http://www.w3.org/1999/02/22-rdf-syntax-ns\">\n <!ENTITY rdfs \"http://www.w3.org/2000/01/rdf-schema\">\n  <!ENTITY daml \"http://www.daml.org/2001/03/daml+oil\">\n  <!ENTITY process \"http://www.daml.org/services/daml-s/2001/10/Process\">\n  <!ENTITY service \"http://www.daml.org/services/daml-s/2001/10/Service\">\n  <!ENTITY profile \"http://www.daml.org/services/daml-s/2001/10/Profile\"> \n  <!ENTITY country \"http://www.daml.ri.cmu.edu/ont/Country.daml\">\n  <!ENTITY concepts \"http://www.daml.ri.cmu.edu/ont/DAML-S/concepts.daml\">\n  <!ENTITY profile \"http://www.daml.org/services/daml-s/2001/10/Profile\"> \n  <!ENTITY time \"http://www.ai.sri.com/daml/ontologies/sri-basic/1-0/Time.daml\">\n  <!ENTITY xsd \"http://www.w3.org/2000/10/XMLSchema.xsd\">\n  <!ENTITY DEFAULT \"http:"+context.whereAmI() + "\\services\\MakeComputer.daml\">]> \n";
	serviceDescription += "<rdf:RDF \n xmlns:rdf =\"&rdf;#\" \n xmlns:profile=\"&profile;#\"\n xmlns:rdfs =    \"&rdfs;#\" \n xmlns:xsd =    \"&xsd;#\"\n  xmlns:daml =    \"&daml;#\"\n  xmlns:service = \"&service;#\"\n  xmlns:process = \"&process;#\">\n";
	serviceDescription += "<daml:ontology about=\""+context.getOntologyDb().getFilename()+"\">\n";
	serviceDescription += "<daml:versionInfo>$Id:MakeComputer.daml,v0.0$<daml:versionInfo>\n";
	serviceDescription += "<service:ServiceProfile rdf:ID=\"MakeComputer\">\n";
	serviceDescription += "<profile:textDescription>\"\"</profile:textDescription>\n";
	serviceDescription += "<profile:providedBy><profile:ServiceProvider rdf:ID=\"" +context.whoami() + ">\"\n";
	serviceDescription += "<profile:name> MakeComputer</profile:name>\n";
	serviceDescription += "<profile:phone></profile:phone>\n";
	serviceDescription += "<profile:fax></profile:fax>\n";
	serviceDescription += "<profile:email></profile:email>\n";
	serviceDescription += "<profile:physicalAddress></profile:physicalAddress>\n";
	serviceDescription += "<profile:webURL>"+context.whereAmI() + "\\services\\AbstractTaskId0</profile:webURL>\n";
	serviceDescription += "</profile:ServiceProvider>\n</profile:providedBy>\n";
	serviceDescription += "<profile:geographicRadius></profile:geographicRadius>\n";
	serviceDescription += " <daml:imports rdf:resource=\"http://www.w3.org/1999/02/22-rdf-syntax-ns\" /> \n  <daml:imports rdf:resource=\"http://www.w3.org/2000/01/rdf-schema\" />\n  <daml:imports rdf:resource=\"http://www.daml.org/2001/03/daml+oil\" /> \n  <daml:imports rdf:resource=\"http://www.daml.org/services/daml-s/2001/10/Service\" />\n  <daml:imports rdf:resource=\"http://www.daml.org/services/daml-s/2001/10/Process\" /> \n  <daml:imports rdf:resource=\"http://www.daml.org/services/daml-s/2001/10/Profile\" />\n";
	serviceDescription += "<input>\n";
	serviceDescription += "<profile:ParameterDescription rdf:ID=\"KeyBoard\">\n";
	serviceDescription += "<profile:parameterName>?kb</profile:parameterName>\n";
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#KeyBoard#unit_cost#?var75\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#KeyBoard#type#?computer.kb_type\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#KeyBoard#number#?computer.number\"">;
	serviceDescription += "</input>\n";
	serviceDescription += "<input>\n";
	serviceDescription += "<profile:ParameterDescription rdf:ID=\"Printer\">\n";
	serviceDescription += "<profile:parameterName>?printer</profile:parameterName>\n";
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#Printer#unit_cost#?var79\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#Printer#type#?computer.printer_type\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#Printer#number#?computer.number\"">;
	serviceDescription += "</input>\n";
	serviceDescription += "<input>\n";
	serviceDescription += "<profile:ParameterDescription rdf:ID=\"Monitor\">\n";
	serviceDescription += "<profile:parameterName>?monitor</profile:parameterName>\n";
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#Monitor#unit_cost#?var83\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#Monitor#type#?computer.monitor_type\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#Monitor#number#?computer.number\"">;
	serviceDescription += "</input>\n";
	serviceDescription += "<input>\n";
	serviceDescription += "<profile:ParameterDescription rdf:ID=\"MotherBoard\">\n";
	serviceDescription += "<profile:parameterName>?board</profile:parameterName>\n";
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#MotherBoard#unit_cost#?var132\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#MotherBoard#type#?computer.cpu_speed\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#MotherBoard#number#?computer.number\"">;
	serviceDescription += "</input>\n";
	serviceDescription += "<postcondition>\n";
	serviceDescription += "<profile:ParameterDescription rdf:ID=\"Computer\">\n";
	serviceDescription += "<profile:parameterName>?computer</profile:parameterName>\n";
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#Computer#kb_type#?var338\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#Computer#cpu_speed#?var337\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#Computer#unit_cost#?var91\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#Computer#printer_type#?var339\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#Computer#number#?var336\"">;
	serviceDescription += "<profile:restrictedTo\nrdf:resource=\"http://"+context.whereAmI()+"/ontologies/"+context.getOntologyDb().getFilename() +"#Computer#monitor_type#?var340\"">;
	serviceDescription += "</postcondition>\n";
	serviceDescription += "</service:ServiceProfile>\n</rdf:RDF>\n";

	return serviceDescription;
}



   protected void exec() {
      /*
      Add the task execution code here. The following variables are defined:
         protected Fact[][]  inputArgs; 
         protected Fact[][]  outputArgs; 
      Before exec() is called inputArgs will contain the input
      Facts consumed by the task. After execution, set outputArgs to 
      contain the output Facts produced by the task.
      */

      // The Input Facts:

      Fact[] _kb = inputArgs[0];	// KeyBoard
      Fact[] _printer = inputArgs[1];	// Printer
      Fact[] _monitor = inputArgs[2];	// Monitor
      Fact[] _board = inputArgs[3];	// MotherBoard

      // The Output Facts:

      Fact[] _computer;	// Computer

      /* USER CODE STARTS */

      System.out.println("-Expected Input-");
      for(int i = 0; i < expInputArgs.length; i++ )
         System.out.println(expInputArgs[i].pprint());

      System.out.println("-Input-");
      for(int j = 0; j < inputArgs.length; j++) {
         System.out.println("Input Fact["+j+"]");
         for(int i = 0; i < inputArgs[j].length; i++)
            System.out.println(inputArgs[j][i].pprint());
      }

      System.out.println("-Expected Output-");
      for(int i = 0; i < expOutputArgs.length; i++ )
         System.out.println(expOutputArgs[i].pprint());

      System.out.println("-Output-");
      _computer = new Fact[1];
      _computer[0] = new Fact(Fact.FACT,expOutputArgs[0]);
      System.out.println(_computer[0].pprint());

      /* USER CODE ENDS */
      outputArgs = new Fact[1][];
      outputArgs[0] = _computer;
   }
}
